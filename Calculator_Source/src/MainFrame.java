
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author juhoonlee
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        calText = new javax.swing.JTextField();
        calBack = new javax.swing.JButton();
        calClear = new javax.swing.JButton();
        cal7 = new javax.swing.JButton();
        cal8 = new javax.swing.JButton();
        cal9 = new javax.swing.JButton();
        cal4 = new javax.swing.JButton();
        cal5 = new javax.swing.JButton();
        cal6 = new javax.swing.JButton();
        cal1 = new javax.swing.JButton();
        cal2 = new javax.swing.JButton();
        cal3 = new javax.swing.JButton();
        cal0 = new javax.swing.JButton();
        calDot = new javax.swing.JButton();
        calDiv = new javax.swing.JButton();
        calMul = new javax.swing.JButton();
        calMin = new javax.swing.JButton();
        calAdd = new javax.swing.JButton();
        calMod = new javax.swing.JButton();
        calOr = new javax.swing.JButton();
        calLsh = new javax.swing.JButton();
        calRes = new javax.swing.JButton();
        calAnd = new javax.swing.JButton();
        calXor = new javax.swing.JButton();
        calNot = new javax.swing.JButton();
        calRsh = new javax.swing.JButton();
        calLn = new javax.swing.JButton();
        calSin = new javax.swing.JButton();
        calSquared2 = new javax.swing.JButton();
        calFactorial = new javax.swing.JButton();
        calCos = new javax.swing.JButton();
        calSquared = new javax.swing.JButton();
        calLog = new javax.swing.JButton();
        calTan = new javax.swing.JButton();
        calTripple = new javax.swing.JButton();
        calFoun = new javax.swing.JButton();
        calPi = new javax.swing.JButton();
        calSin1 = new javax.swing.JButton();
        calMR = new javax.swing.JButton();
        calMC = new javax.swing.JButton();
        calPlus = new javax.swing.JButton();
        calMinus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        calBack.setText("CE");
        calBack.setPreferredSize(new java.awt.Dimension(100, 23));
        calBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calBackActionPerformed(evt);
            }
        });

        calClear.setText("C");
        calClear.setPreferredSize(new java.awt.Dimension(100, 23));
        calClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calClearActionPerformed(evt);
            }
        });

        cal7.setText("7");
        cal7.setSize(new java.awt.Dimension(60, 24));
        cal7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cal7ActionPerformed(evt);
            }
        });

        cal8.setText("8");
        cal8.setSize(new java.awt.Dimension(60, 24));
        cal8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cal8ActionPerformed(evt);
            }
        });

        cal9.setText("9");
        cal9.setSize(new java.awt.Dimension(60, 24));
        cal9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cal9ActionPerformed(evt);
            }
        });

        cal4.setText("4");
        cal4.setSize(new java.awt.Dimension(60, 24));
        cal4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cal4ActionPerformed(evt);
            }
        });

        cal5.setText("5");
        cal5.setSize(new java.awt.Dimension(60, 24));
        cal5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cal5ActionPerformed(evt);
            }
        });

        cal6.setText("6");
        cal6.setSize(new java.awt.Dimension(60, 24));
        cal6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cal6ActionPerformed(evt);
            }
        });

        cal1.setText("1");
        cal1.setSize(new java.awt.Dimension(60, 24));
        cal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cal1ActionPerformed(evt);
            }
        });

        cal2.setText("2");
        cal2.setSize(new java.awt.Dimension(60, 24));
        cal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cal2ActionPerformed(evt);
            }
        });

        cal3.setText("3");
        cal3.setSize(new java.awt.Dimension(60, 24));
        cal3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cal3ActionPerformed(evt);
            }
        });

        cal0.setText("0");
        cal0.setSize(new java.awt.Dimension(60, 24));
        cal0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cal0ActionPerformed(evt);
            }
        });

        calDot.setText(".");
        calDot.setSize(new java.awt.Dimension(60, 24));
        calDot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calDotActionPerformed(evt);
            }
        });

        calDiv.setText("/");
        calDiv.setSize(new java.awt.Dimension(60, 24));
        calDiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calDivActionPerformed(evt);
            }
        });

        calMul.setText("*");
        calMul.setSize(new java.awt.Dimension(60, 24));
        calMul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calMulActionPerformed(evt);
            }
        });

        calMin.setText("-");
        calMin.setSize(new java.awt.Dimension(60, 24));
        calMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calMinActionPerformed(evt);
            }
        });

        calAdd.setText("+");
        calAdd.setSize(new java.awt.Dimension(60, 24));
        calAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calAddActionPerformed(evt);
            }
        });

        calMod.setText("Mod");
        calMod.setSize(new java.awt.Dimension(60, 24));
        calMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calModActionPerformed(evt);
            }
        });

        calOr.setText("Or");
        calOr.setSize(new java.awt.Dimension(60, 24));
        calOr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calOrActionPerformed(evt);
            }
        });

        calLsh.setText("Lsh");
        calLsh.setSize(new java.awt.Dimension(60, 24));
        calLsh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calLshActionPerformed(evt);
            }
        });

        calRes.setText("=");
        calRes.setSize(new java.awt.Dimension(60, 24));
        calRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calResActionPerformed(evt);
            }
        });

        calAnd.setText("And");
        calAnd.setSize(new java.awt.Dimension(60, 24));
        calAnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calAndActionPerformed(evt);
            }
        });

        calXor.setText("Xor");
        calXor.setSize(new java.awt.Dimension(60, 24));
        calXor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calXorActionPerformed(evt);
            }
        });

        calNot.setText("Not");
        calNot.setSize(new java.awt.Dimension(60, 24));
        calNot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calNotActionPerformed(evt);
            }
        });

        calRsh.setText("Rsh");
        calRsh.setSize(new java.awt.Dimension(60, 24));
        calRsh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calRshActionPerformed(evt);
            }
        });

        calLn.setText("In");
        calLn.setSize(new java.awt.Dimension(60, 24));
        calLn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calLnActionPerformed(evt);
            }
        });

        calSin.setText("sin");
        calSin.setSize(new java.awt.Dimension(60, 24));
        calSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calSinActionPerformed(evt);
            }
        });

        calSquared2.setText("x^y");
        calSquared2.setSize(new java.awt.Dimension(60, 24));
        calSquared2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calSquared2ActionPerformed(evt);
            }
        });

        calFactorial.setText("n!");
        calFactorial.setSize(new java.awt.Dimension(60, 24));
        calFactorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calFactorialActionPerformed(evt);
            }
        });

        calCos.setText("cos");
        calCos.setSize(new java.awt.Dimension(60, 24));
        calCos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calCosActionPerformed(evt);
            }
        });

        calSquared.setText("x^2");
        calSquared.setSize(new java.awt.Dimension(60, 24));
        calSquared.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calSquaredActionPerformed(evt);
            }
        });

        calLog.setText("log");
        calLog.setSize(new java.awt.Dimension(60, 24));
        calLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calLogActionPerformed(evt);
            }
        });

        calTan.setText("tan");
        calTan.setSize(new java.awt.Dimension(60, 24));
        calTan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calTanActionPerformed(evt);
            }
        });

        calTripple.setText("x^3");
        calTripple.setSize(new java.awt.Dimension(60, 24));
        calTripple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calTrippleActionPerformed(evt);
            }
        });

        calFoun.setText("1/x");
        calFoun.setSize(new java.awt.Dimension(60, 24));
        calFoun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calFounActionPerformed(evt);
            }
        });

        calPi.setText("pi");
        calPi.setSize(new java.awt.Dimension(60, 24));
        calPi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calPiActionPerformed(evt);
            }
        });

        calSin1.setText("10^x");
        calSin1.setSize(new java.awt.Dimension(60, 24));
        calSin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calSin1ActionPerformed(evt);
            }
        });

        calMR.setText("MR");
        calMR.setSize(new java.awt.Dimension(60, 24));
        calMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calMRActionPerformed(evt);
            }
        });

        calMC.setText("MC");
        calMC.setSize(new java.awt.Dimension(60, 24));
        calMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calMCActionPerformed(evt);
            }
        });

        calPlus.setText("M+");
        calPlus.setSize(new java.awt.Dimension(60, 24));
        calPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calPlusActionPerformed(evt);
            }
        });

        calMinus.setText("M-");
        calMinus.setSize(new java.awt.Dimension(60, 24));
        calMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calMinusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(calText, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(calCos, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(calTan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(calSin, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(calPi, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(calSquared, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(calSquared2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(calTripple, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(calSin1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(calFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(calLog, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(calFoun, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(calLn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cal1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cal2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cal3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(calMin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(calLsh, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(calXor, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cal0, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(calDot, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(calAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(calRes, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(calNot, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cal4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cal5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cal6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(calMul, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(calRsh, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cal7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cal8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(calMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(calPlus, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(calMC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cal9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(calDiv, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(calMR, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(calBack, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(calMod, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(calAnd, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(calClear, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(calOr, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(calText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(calBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calMR)
                            .addComponent(calMC)
                            .addComponent(calPlus)
                            .addComponent(calMinus))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cal4)
                            .addComponent(cal5)
                            .addComponent(cal6)
                            .addComponent(calMul)
                            .addComponent(calOr)
                            .addComponent(calRsh)
                            .addComponent(calLog))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cal1)
                            .addComponent(cal2)
                            .addComponent(cal3)
                            .addComponent(calMin)
                            .addComponent(calXor)
                            .addComponent(calLsh)
                            .addComponent(calFactorial))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cal0)
                            .addComponent(calDot)
                            .addComponent(calAdd)
                            .addComponent(calRes)
                            .addComponent(calNot)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(calLn)
                                .addComponent(calSin1)
                                .addComponent(cal7)
                                .addComponent(cal8)
                                .addComponent(cal9)
                                .addComponent(calDiv)
                                .addComponent(calMod)
                                .addComponent(calAnd))
                            .addComponent(calPi, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(calSin)
                            .addComponent(calSquared2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(calCos)
                            .addComponent(calSquared))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(calTan)
                            .addComponent(calTripple)
                            .addComponent(calFoun))))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    double doubleResult = 0;
    int intResult = 0;
    double ms = 0.0;
    private void cal0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cal0ActionPerformed
        calText.setText(calText.getText() + cal0.getText());
    }//GEN-LAST:event_cal0ActionPerformed

    private void cal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cal1ActionPerformed
        calText.setText(calText.getText() + cal1.getText());
    }//GEN-LAST:event_cal1ActionPerformed

    private void cal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cal2ActionPerformed
        calText.setText(calText.getText() + cal2.getText());
    }//GEN-LAST:event_cal2ActionPerformed

    private void cal3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cal3ActionPerformed
        calText.setText(calText.getText() + cal3.getText());
    }//GEN-LAST:event_cal3ActionPerformed

    private void cal4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cal4ActionPerformed
        calText.setText(calText.getText() + cal4.getText());
    }//GEN-LAST:event_cal4ActionPerformed

    private void cal5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cal5ActionPerformed
        calText.setText(calText.getText() + cal5.getText());
    }//GEN-LAST:event_cal5ActionPerformed

    private void cal6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cal6ActionPerformed
        calText.setText(calText.getText() + cal6.getText());
    }//GEN-LAST:event_cal6ActionPerformed

    private void cal7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cal7ActionPerformed
        calText.setText(calText.getText() + cal7.getText());
    }//GEN-LAST:event_cal7ActionPerformed

    private void cal8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cal8ActionPerformed
        calText.setText(calText.getText() + cal8.getText());
    }//GEN-LAST:event_cal8ActionPerformed

    private void cal9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cal9ActionPerformed
        calText.setText(calText.getText() + cal9.getText());
    }//GEN-LAST:event_cal9ActionPerformed

    private void calAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calAddActionPerformed
        calText.setText(calText.getText() + " + ");
    }//GEN-LAST:event_calAddActionPerformed

    private void calMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calMinActionPerformed
        calText.setText(calText.getText() + " - ");
    }//GEN-LAST:event_calMinActionPerformed

    private void calMulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calMulActionPerformed
        calText.setText(calText.getText() + " * ");
    }//GEN-LAST:event_calMulActionPerformed

    private void calDivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calDivActionPerformed
        calText.setText(calText.getText() + " / ");
    }//GEN-LAST:event_calDivActionPerformed

    private void calResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calResActionPerformed
        String str[] = calText.getText().split(" ");
        if(str[1].equals("+")){
            doubleResult = Double.parseDouble(str[0]) + Double.parseDouble(str[2]);
            calText.setText(Double.toString(doubleResult));
        }else if(str[1].equals("-")){
            doubleResult = Double.parseDouble(str[0]) - Double.parseDouble(str[2]);
            calText.setText(Double.toString(doubleResult));
        }else if(str[1].equals("*")){
            doubleResult = Double.parseDouble(str[0]) * Double.parseDouble(str[2]);
            calText.setText(Double.toString(doubleResult));
        }else if(str[1].equals("/")){
            doubleResult = Double.parseDouble(str[0]) / Double.parseDouble(str[2]);
            calText.setText(Double.toString(doubleResult));
        }else if(str[1].equals("%")){
            doubleResult = Double.parseDouble(str[0]) % Double.parseDouble(str[2]);
            calText.setText(Double.toString(doubleResult));
        }else if(str[1].equals("<<")){
            intResult = Integer.parseInt(str[0]) << Integer.parseInt(str[2]);
            calText.setText(Integer.toString(intResult));
        }else if(str[1].equals(">>")){
            intResult = Integer.parseInt(str[0]) >> Integer.parseInt(str[2]);
            calText.setText(Integer.toString(intResult));
        }else if(str[1].equals("&")){
            intResult = Integer.parseInt(str[0]) & Integer.parseInt(str[2]);
            calText.setText(Integer.toString(intResult));
        }else if(str[1].equals("|")){
            intResult = Integer.parseInt(str[0]) | Integer.parseInt(str[2]);
            calText.setText(Integer.toString(intResult));
        }else if(str[1].equals("^")){
            intResult = Integer.parseInt(str[0]) ^ Integer.parseInt(str[2]);
            calText.setText(Integer.toString(intResult));
        }
    }//GEN-LAST:event_calResActionPerformed

    private void calDotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calDotActionPerformed
        calText.setText(calText.getText() + ".");
    }//GEN-LAST:event_calDotActionPerformed

    private void calModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calModActionPerformed
        calText.setText(calText.getText() + " % ");
    }//GEN-LAST:event_calModActionPerformed

    private void calRshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calRshActionPerformed
        calText.setText(calText.getText() + " >> ");
    }//GEN-LAST:event_calRshActionPerformed

    private void calLshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calLshActionPerformed
        calText.setText(calText.getText() + " << ");
    }//GEN-LAST:event_calLshActionPerformed

    private void calAndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calAndActionPerformed
        calText.setText(calText.getText() + " & ");
    }//GEN-LAST:event_calAndActionPerformed

    private void calOrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calOrActionPerformed
        calText.setText(calText.getText() + " | ");
    }//GEN-LAST:event_calOrActionPerformed

    private void calXorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calXorActionPerformed
        calText.setText(calText.getText() + " ^ ");
    }//GEN-LAST:event_calXorActionPerformed

    private void calNotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calNotActionPerformed
        int result = ~Integer.parseInt(calText.getText());
        calText.setText(Integer.toString(result));
    }//GEN-LAST:event_calNotActionPerformed

    private void calBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calBackActionPerformed
        String str = calText.getText();
        str = str.substring(0, str.length()-1);
        calText.setText(str);
    }//GEN-LAST:event_calBackActionPerformed

    private void calClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calClearActionPerformed
        calText.setText("");
    }//GEN-LAST:event_calClearActionPerformed

    private void calLnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calLnActionPerformed
        calText.setText(Double.toString(Math.log(Integer.parseInt(calText.getText()))));
    }//GEN-LAST:event_calLnActionPerformed

    private void calLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calLogActionPerformed
        calText.setText(Double.toString(Math.log10(Integer.parseInt(calText.getText())) / Math.log10(2)));
    }//GEN-LAST:event_calLogActionPerformed

    private void calFactorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calFactorialActionPerformed
        int index = Integer.parseInt(calText.getText());
        int mul = 1;
        for (int i=index; i>0; i--){
            mul = mul * i;
        }
        calText.setText(Integer.toString(mul));
    }//GEN-LAST:event_calFactorialActionPerformed

    private void calFounActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calFounActionPerformed
        double div = 1.0 / Double.parseDouble(calText.getText());
        calText.setText(Double.toString(div));
    }//GEN-LAST:event_calFounActionPerformed

    private void calPiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calPiActionPerformed
        calText.setText(Double.toString(Integer.parseInt(calText.getText()) * 3.14159265359));
    }//GEN-LAST:event_calPiActionPerformed

    private void calSquaredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calSquaredActionPerformed
        int no = Integer.parseInt(calText.getText());
        calText.setText(Integer.toString(no * no));
    }//GEN-LAST:event_calSquaredActionPerformed

    private void calTrippleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calTrippleActionPerformed
        int no = Integer.parseInt(calText.getText());
        calText.setText(Integer.toString(no * no * no));
    }//GEN-LAST:event_calTrippleActionPerformed

    private void calSquared2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calSquared2ActionPerformed
        String no[] = (calText.getText()).split("");
        int result = 1;
        int num = Integer.parseInt(no[0]);
        for(int i=0; i<Integer.parseInt(no[1]); i++){
            result = result * num;
        }
        calText.setText(Integer.toString(result));
    }//GEN-LAST:event_calSquared2ActionPerformed

    private void calSinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calSinActionPerformed
        int no = Integer.parseInt(calText.getText());
        calText.setText(Double.toString(Math.sin(no * Math.PI / 180)));
    }//GEN-LAST:event_calSinActionPerformed

    private void calCosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calCosActionPerformed
        int no = Integer.parseInt(calText.getText());
        calText.setText(Double.toString(Math.cos(no * Math.PI / 180)));
    }//GEN-LAST:event_calCosActionPerformed

    private void calTanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calTanActionPerformed
        int no = Integer.parseInt(calText.getText());
        calText.setText(Double.toString(Math.tan(no * Math.PI / 180)));
    }//GEN-LAST:event_calTanActionPerformed

    private void calSin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calSin1ActionPerformed
        int no = Integer.parseInt(calText.getText());
        int result = 1;
        for(int i=0; i<no; i++){
            result = 10 * result;
        }
        calText.setText(Integer.toString(result));
    }//GEN-LAST:event_calSin1ActionPerformed

    private void calMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calMRActionPerformed
        calText.setText(calText.getText() + Double.toString(ms));
    }//GEN-LAST:event_calMRActionPerformed

    private void calMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calMCActionPerformed
        ms = 0.0;
    }//GEN-LAST:event_calMCActionPerformed

    private void calPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calPlusActionPerformed
        ms = ms + Double.parseDouble(calText.getText());
        calText.setText("");
    }//GEN-LAST:event_calPlusActionPerformed

    private void calMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calMinusActionPerformed
        ms = ms - Double.parseDouble(calText.getText());
        calText.setText("");
    }//GEN-LAST:event_calMinusActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cal0;
    private javax.swing.JButton cal1;
    private javax.swing.JButton cal2;
    private javax.swing.JButton cal3;
    private javax.swing.JButton cal4;
    private javax.swing.JButton cal5;
    private javax.swing.JButton cal6;
    private javax.swing.JButton cal7;
    private javax.swing.JButton cal8;
    private javax.swing.JButton cal9;
    private javax.swing.JButton calAdd;
    private javax.swing.JButton calAnd;
    private javax.swing.JButton calBack;
    private javax.swing.JButton calClear;
    private javax.swing.JButton calCos;
    private javax.swing.JButton calDiv;
    private javax.swing.JButton calDot;
    private javax.swing.JButton calFactorial;
    private javax.swing.JButton calFoun;
    private javax.swing.JButton calLn;
    private javax.swing.JButton calLog;
    private javax.swing.JButton calLsh;
    private javax.swing.JButton calMC;
    private javax.swing.JButton calMR;
    private javax.swing.JButton calMin;
    private javax.swing.JButton calMinus;
    private javax.swing.JButton calMod;
    private javax.swing.JButton calMul;
    private javax.swing.JButton calNot;
    private javax.swing.JButton calOr;
    private javax.swing.JButton calPi;
    private javax.swing.JButton calPlus;
    private javax.swing.JButton calRes;
    private javax.swing.JButton calRsh;
    private javax.swing.JButton calSin;
    private javax.swing.JButton calSin1;
    private javax.swing.JButton calSquared;
    private javax.swing.JButton calSquared2;
    private javax.swing.JButton calTan;
    private javax.swing.JTextField calText;
    private javax.swing.JButton calTripple;
    private javax.swing.JButton calXor;
    // End of variables declaration//GEN-END:variables


}
